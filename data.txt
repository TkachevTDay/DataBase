#include <iostream>
#include <fstream>
#include <string>
#include <cstdlib>
using namespace std;
ifstream in;
ofstream out;
int str_num = 0;
string cmd;
string in_str; string close;
string address = "..\\data.txt";
class functions {
public:
    void help() {
        cout << "    add - add string to file" << '\n';
        cout << "    find - finds string" << '\n';
        cout << "    print - prints all data" << '\n';
        cout << "    erase - deleting all data" << '\n';
        cout << "    exit - close a program" << '\n';
        cout << "    clear - clears console" << '\n';
        cout << "    size - prints size of file" << '\n';
    }
    void add() {
        out.open(address, ios::app);
        string a;
        cout << "---> ";
        cin >> a;
        out << a;
        out << '\n';
        out.seekp(0, ios_base::beg);
        cout << "Add successeful.";
        out.close();
    }
    void find() {
        in.open(address);
        in.seekg(0, ios_base::beg);
        cout << "Insert number of string to open." << '\n';
        int num = 0;
        cout << "---> ";
        cin >> str_num;
        while (getline(in, in_str)) {
            if (++num == str_num)
                cout << "Founded successefuly, string contains: " << in_str << '\n';
        }
        in.clear();
        in.close();
    }
    void erase() {
        char accept;
        cout << "Are u really want to delete all data?" << '\n' << "Print y/n to continue." << '\n' << "---> ";
        cin >> accept;
        if (accept == 'y') {
            out.open(address, ios::trunc);
            cout << "Successefuly done!" << '\n';
            out.close();
        }
        else if (accept == 'n') {
            cout << "Operation canceled." << '\n';
        }
    }
    void print() {
        in.open(address);
        in.seekg(0, ios_base::beg);
        int j = 1;
        while (getline(in, in_str)) {
            cout << j << "---> " << in_str << '\n';
            j++;
        }
        in.close();
    }
    void exit() {
        system("color 4");
        cout << "EXIT SUCCESSEFUL.";
        _Exit(EXIT_SUCCESS);
    }
    void clear() {
        system("cls");
        cout << "---<help - for help>---";
    }
    void size() {
        streampos begin, end;
        in.open(address, ios::binary);
        begin = in.tellg();
        in.seekg(0, ios::end);
        end = in.tellg();
        in.close();
        cout << "size is: " << (end - begin) << " bytes.\n";
    }
};
int main()
{
    functions func;
    cout << "---<help - for help>---";
    do {
        cout << '\n' << "what operation u want to do?" << '\n';
        cout << "---> ";
        cin >> cmd;
        if (cmd == "find") {
            func.find();
        }
        else if (cmd == "erase") {
            func.erase();
        }
        else if (cmd == "add") {
            func.add();
        }
        else if (cmd == "print") {
            func.print();
        }
        else if (cmd == "exit") {
            func.exit();
        }
        else if (cmd == "clear") {
            func.clear();
        }
        else if (cmd == "help") {
            func.help();
        }
        else if (cmd == "size") {
            func.size();
        }
    } while (true);
    
}


